{
  "openapi": "3.0.3",
  "info": {
    "title": "Some API",
    "summary": "This is the Some API summary",
    "description": "This is the Some API description",
    "termsOfService": "http://example.test/terms/",
    "contact": {
      "name": "Some API Support",
      "url": "http://example.test",
      "email": "support@example.test"
    },
    "version": "0.1.0",
    "license": {
      "name": "Apache 2.0",
      "identifier": "Apache-2.0"
    }
  },
  "servers": [
    {
      "url": "/",
      "description": "This server"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "style": "deepObject",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0,
              "examples": [
                0
              ],
              "title": "Pagination Skip",
              "description": "How many records to skip for the current query",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "limit",
            "style": "deepObject",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 1,
              "examples": [
                200
              ],
              "maximum": 200,
              "title": "Pagination Limit",
              "description": "How many records to return as maximum for the current query",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Page",
                  "description": "A page of items starting from `skip` and limited by `limit`\n with the total number of records present in `total`",
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "integer",
                      "format": "uint64",
                      "minimum": 0
                    },
                    "limit": {
                      "type": "integer",
                      "format": "uint64",
                      "minimum": 1
                    },
                    "total": {
                      "type": "integer",
                      "format": "uint64",
                      "minimum": 0
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "title": "User",
                        "description": "A user record",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The unique id of the user",
                            "type": "string",
                            "pattern": "^[a-z0-9]+$"
                          },
                          "email": {
                            "description": "The email address of the user",
                            "type": "string",
                            "format": "email",
                            "maxLength": 100
                          }
                        },
                        "required": [
                          "id",
                          "email"
                        ]
                      }
                    }
                  },
                  "required": [
                    "skip",
                    "limit",
                    "total",
                    "items"
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorPayload"
                }
              }
            }
          },
          "5XX": {
            "description": "A server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorPayload"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "User",
                  "description": "A user record",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The unique id of the user",
                      "type": "string",
                      "pattern": "^[a-z0-9]+$"
                    },
                    "email": {
                      "description": "The email address of the user",
                      "type": "string",
                      "format": "email",
                      "maxLength": 100
                    }
                  },
                  "required": [
                    "id",
                    "email"
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorPayload"
                }
              }
            }
          },
          "5XX": {
            "description": "A server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorPayload"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorPayload": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "status": {
                "type": "integer",
                "format": "uint16",
                "minimum": 400,
                "maximum": 599
              },
              "message": {
                "type": "string"
              }
            },
            "required": [
              "status",
              "message"
            ],
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "const": "INTERNAL"
                  }
                },
                "required": [
                  "kind"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "const": "RESOURCE_NOT_FOUND"
                  }
                },
                "required": [
                  "kind"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "const": "RECORD_NOT_FOUND"
                  }
                },
                "required": [
                  "kind"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "const": "INVALID_PARAMS_PARSE"
                  }
                },
                "required": [
                  "kind"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "const": "INVALID_PARAMS_VALIDATE"
                  }
                },
                "required": [
                  "kind"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "const": "INVALID_QUERY_PARSE"
                  }
                },
                "required": [
                  "kind"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "const": "INVALID_QUERY_VALIDATE"
                  }
                },
                "required": [
                  "kind"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "const": "PAYLOAD_READ"
                  }
                },
                "required": [
                  "kind"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "const": "PAYLOAD_CONTENT_TYPE"
                  }
                },
                "required": [
                  "kind"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "const": "INVALID_PAYLOAD_PARSE"
                  }
                },
                "required": [
                  "kind"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "const": "INVALID_PAYLOAD_VALIDATE"
                  }
                },
                "required": [
                  "kind"
                ]
              }
            ]
          }
        },
        "required": [
          "error"
        ]
      }
    }
  }
}